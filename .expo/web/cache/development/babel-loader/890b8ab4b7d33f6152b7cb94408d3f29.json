{"ast":null,"code":"import { defineAnimation } from \"react-native-reanimated\";\nexport var withPause = function withPause(_nextAnimation, paused) {\n  \"worklet\";\n\n  return defineAnimation(_nextAnimation, function () {\n    \"worklet\";\n\n    var nextAnimation = typeof _nextAnimation === \"function\" ? _nextAnimation() : _nextAnimation;\n\n    var onFrame = function onFrame(state, now) {\n      var lastTimestamp = state.lastTimestamp,\n          elapsed = state.elapsed;\n\n      if (paused.value) {\n        state.elapsed = now - lastTimestamp;\n        return false;\n      }\n\n      var dt = now - elapsed;\n      var finished = nextAnimation.onFrame(nextAnimation, dt);\n      state.current = nextAnimation.current;\n      state.lastTimestamp = dt;\n      return finished;\n    };\n\n    var onStart = function onStart(state, value, now, previousState) {\n      state.lastTimestamp = now;\n      state.elapsed = 0;\n      state.current = 0;\n      nextAnimation.onStart(nextAnimation, value, now, previousState);\n    };\n\n    var callback = function callback(finished) {\n      if (nextAnimation.callback) {\n        nextAnimation.callback(finished);\n      }\n    };\n\n    return {\n      onFrame: onFrame,\n      onStart: onStart,\n      isHigherOrder: true,\n      current: nextAnimation.current,\n      callback: callback,\n      previousAnimation: null,\n      startTime: 0,\n      started: false,\n      lastTimestamp: 0,\n      elapsed: 0\n    };\n  });\n};\nexport var withBouncing = function withBouncing(_nextAnimation, lowerBound, upperBound) {\n  \"worklet\";\n\n  return defineAnimation(_nextAnimation, function () {\n    \"worklet\";\n\n    var nextAnimation = typeof _nextAnimation === \"function\" ? _nextAnimation() : _nextAnimation;\n\n    var onFrame = function onFrame(state, now) {\n      var finished = nextAnimation.onFrame(nextAnimation, now);\n      var velocity = nextAnimation.velocity,\n          current = nextAnimation.current;\n      state.current = current;\n\n      if (velocity < 0 && state.current <= lowerBound || velocity > 0 && state.current >= upperBound) {\n        state.current = velocity < 0 ? lowerBound : upperBound;\n        nextAnimation.velocity *= -0.5;\n      }\n\n      return finished;\n    };\n\n    var onStart = function onStart(_state, value, now, previousState) {\n      nextAnimation.onStart(nextAnimation, value, now, previousState);\n    };\n\n    return {\n      onFrame: onFrame,\n      onStart: onStart,\n      current: nextAnimation.current,\n      callback: nextAnimation.callback,\n      velocity: 0\n    };\n  });\n};","map":{"version":3,"sources":["Animations.ts"],"names":["withPause","defineAnimation","nextAnimation","_nextAnimation","onFrame","lastTimestamp","elapsed","state","paused","now","dt","finished","onStart","callback","isHigherOrder","current","previousAnimation","startTime","started","withBouncing","velocity"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/consistent-type-imports */\nimport type { AnimatableValue, Animation } from \"react-native-reanimated\";\nimport Animated, { defineAnimation } from \"react-native-reanimated\";\n\ninterface PausableAnimation extends Animation<PausableAnimation> {\n  lastTimestamp: number;\n  elapsed: number;\n}\n\nexport const withPause = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _nextAnimation: any,\n  paused: Animated.SharedValue<boolean>\n) => {\n  \"worklet\";\n  return defineAnimation<PausableAnimation>(_nextAnimation, () => {\n    \"worklet\";\n    const nextAnimation: PausableAnimation =\n      typeof _nextAnimation === \"function\" ? _nextAnimation() : _nextAnimation;\n    const onFrame = (state: PausableAnimation, now: number) => {\n      const { lastTimestamp, elapsed } = state;\n      if (paused.value) {\n        state.elapsed = now - lastTimestamp;\n        return false;\n      }\n      const dt = now - elapsed;\n      const finished = nextAnimation.onFrame(nextAnimation, dt);\n      state.current = nextAnimation.current;\n      state.lastTimestamp = dt;\n      return finished;\n    };\n    const onStart = (\n      state: PausableAnimation,\n      value: AnimatableValue,\n      now: number,\n      previousState: PausableAnimation\n    ) => {\n      state.lastTimestamp = now;\n      state.elapsed = 0;\n      state.current = 0;\n      nextAnimation.onStart(nextAnimation, value, now, previousState);\n    };\n    const callback = (finished?: boolean): void => {\n      if (nextAnimation.callback) {\n        nextAnimation.callback(finished);\n      }\n    };\n    return {\n      onFrame,\n      onStart,\n      isHigherOrder: true,\n      current: nextAnimation.current,\n      callback,\n      previousAnimation: null,\n      startTime: 0,\n      started: false,\n      lastTimestamp: 0,\n      elapsed: 0,\n    };\n  });\n};\n\nexport interface PhysicsAnimation extends Animation<PhysicsAnimation> {\n  velocity: number;\n  current: number;\n}\n\n/**\n *  @summary Add a bouncing behavior to a physics-based animation.\n *  An animation is defined as being physics-based if it contains a velocity in its state.\n *  @example\n    // will bounce if the animations hits the position 0 or 100\n    withBouncing(withDecay({ velocity }), 0, 100)\n * @worklet\n */\nexport const withBouncing = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _nextAnimation: any,\n  lowerBound: number,\n  upperBound: number\n): number => {\n  \"worklet\";\n  return defineAnimation<PhysicsAnimation>(_nextAnimation, () => {\n    \"worklet\";\n\n    const nextAnimation: PhysicsAnimation =\n      typeof _nextAnimation === \"function\" ? _nextAnimation() : _nextAnimation;\n\n    const onFrame = (state: PhysicsAnimation, now: number) => {\n      const finished = nextAnimation.onFrame(nextAnimation, now);\n      const { velocity, current } = nextAnimation;\n      state.current = current;\n      if (\n        (velocity < 0 && state.current <= lowerBound) ||\n        (velocity > 0 && state.current >= upperBound)\n      ) {\n        state.current = velocity < 0 ? lowerBound : upperBound;\n        nextAnimation.velocity *= -0.5;\n      }\n      return finished;\n    };\n    const onStart = (\n      _state: PhysicsAnimation,\n      value: number,\n      now: number,\n      previousState: PhysicsAnimation\n    ) => {\n      nextAnimation.onStart(nextAnimation, value, now, previousState);\n    };\n    return {\n      onFrame,\n      onStart,\n      current: nextAnimation.current,\n      callback: nextAnimation.callback,\n      velocity: 0,\n    };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}