{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TypeBadge from \"../Home/TypeBadge\";\nimport globalStyles from \"../../styles/globalStyles.js\";\nimport GradientNameText from \"../GradientNameText\";\nimport DotsSixByThree from \"../../images/vectors/patterns/6x3.png\";\nimport Circle from \"../../images/vectors/patterns/Circle.png\";\nimport Back from \"../../images/vectors/icons/Back.png\";\nimport { MainClient, EvolutionClient } from 'pokenode-ts';\nimport StatsTable from \"./StatsTable\";\nimport DataLine from \"./DataLine\";\nimport Tab from \"./Tab\";\nimport Evolution from \"./Evolution\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Profile = function Profile(props) {\n  var _useState = useState(\"About\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      tab = _useState2[0],\n      setTab = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pokemonSpeciesData = _useState4[0],\n      setPokemonSpeciesData = _useState4[1];\n\n  var _useState5 = useState('Unknown'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      species = _useState6[0],\n      setSpecies = _useState6[1];\n\n  var _useState7 = useState('Unknown'),\n      _useState8 = _slicedToArray(_useState7, 2),\n      weight = _useState8[0],\n      setWeight = _useState8[1];\n\n  var _useState9 = useState('Unknown'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      height = _useState10[0],\n      setHeight = _useState10[1];\n\n  var _useState11 = useState('Unknown'),\n      _useState12 = _slicedToArray(_useState11, 2),\n      growthRate = _useState12[0],\n      setGrowthRate = _useState12[1];\n\n  var _useState13 = useState('Unknown'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      catchRate = _useState14[0],\n      setCatchRate = _useState14[1];\n\n  var _useState15 = useState('Unknown'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      eggCycles = _useState16[0],\n      setEggCycles = _useState16[1];\n\n  var _useState17 = useState('Unknown'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      pokedexEntry = _useState18[0],\n      setPokedexEntry = _useState18[1];\n\n  var _useState19 = useState([]),\n      _useState20 = _slicedToArray(_useState19, 2),\n      eggGroups = _useState20[0],\n      setEggGroups = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      evolutionChainId = _useState22[0],\n      setEvolutionChainId = _useState22[1];\n\n  var _useState23 = useState(),\n      _useState24 = _slicedToArray(_useState23, 2),\n      evolutionChainData = _useState24[0],\n      setEvolutionChainData = _useState24[1];\n\n  function cmToFtInches(num) {\n    var realFeet = num * 0.393700 / 12;\n    var feet = Math.floor(realFeet);\n    var inches = (Math.round(10 * ((realFeet - feet) * 12)) / 10).toFixed(0);\n    inches = inches.toString().padStart(2, '0');\n    return feet + \"\\'\" + inches + \"\\\"\";\n  }\n\n  useEffect(function () {\n    var getPokemonSpeciesData = function _callee() {\n      var api;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setWeight(props.mon.weight / 10 + 'kg (' + (props.mon.weight / 10 * 2.20462).toFixed(1) + ' lbs)');\n              setHeight(props.mon.height / 10 + 'm (' + cmToFtInches(props.mon.height * 10) + ')');\n              api = new MainClient();\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(api.pokemon.getPokemonSpeciesById(props.mon.id).then(function (data) {\n                setPokemonSpeciesData(data);\n                setGrowthRate(data.growth_rate.name.replace(/\\-/g, \" \"));\n                setCatchRate(data.capture_rate);\n                setEggCycles(data.hatch_counter + ' (' + (data.hatch_counter * 255).toLocaleString('en-US') + '-' + (data.hatch_counter * 257).toLocaleString('en-US') + ' steps)');\n\n                for (var i = 0; i < data.genera.length; i++) {\n                  if (data.flavor_text_entries[i].language.name === 'en') {\n                    setPokedexEntry(data.flavor_text_entries[i].flavor_text.replace(/[\\n\\f]/g, ' '));\n                  }\n                }\n\n                for (var _i = 0; _i < data.genera.length; _i++) {\n                  if (data.genera[_i].language.name === 'en') {\n                    setSpecies(data.genera[_i].genus);\n                  }\n                }\n\n                setEggGroups(data.egg_groups.map(function (x) {\n                  return x.name;\n                }));\n                var urlPath = data.evolution_chain.url;\n                setEvolutionChainId(urlPath.substring(urlPath.indexOf('chain/') + 6).slice(0, -1));\n              }));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getPokemonSpeciesData();\n  }, []);\n  useEffect(function () {\n    var getEvolutionChainData = function _callee2() {\n      var api;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(evolutionChainId != null)) {\n                _context2.next = 5;\n                break;\n              }\n\n              console.log(evolutionChainId);\n              api = new EvolutionClient();\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(api.getEvolutionChainById(1).then(function (data) {\n                setEvolutionChainData(data);\n              }));\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getEvolutionChainData();\n  }, [evolutionChainId]);\n  console.log(\"Profile evolutionChainId: \" + evolutionChainId);\n\n  function formatId(id) {\n    var num = '' + id;\n\n    while (num.length < 3) {\n      num = '0' + num;\n    }\n\n    num = '#' + num;\n    return num;\n  }\n\n  return _jsxs(ScrollView, {\n    style: [styles.container, {\n      backgroundColor: globalStyles[\"backgroundtype\" + props.mon.types[0].type.name]\n    }],\n    children: [_jsx(TouchableOpacity, {\n      style: styles.backArrowTouchable,\n      activeOpacity: .8,\n      onPress: function onPress() {\n        return props.setPokemonProfile('');\n      },\n      children: _jsx(Image, {\n        style: styles.backArrow,\n        source: Back\n      })\n    }), _jsx(View, {\n      style: styles.pokemonTitleContainerContainer,\n      children: _jsx(View, {\n        style: styles.pokemonTitleContainer,\n        children: _jsx(GradientNameText, {\n          style: styles.pokemonTitle,\n          color: globalStyles[\"backgroundtype\" + props.mon.types[0].type.name],\n          name: props.mon.name\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.Profile,\n      children: [_jsxs(View, {\n        style: styles.top,\n        children: [_jsxs(View, {\n          style: styles.topImage,\n          children: [_jsx(Image, {\n            style: styles.circle,\n            source: Circle\n          }), _jsx(Image, {\n            onError: function onError(e) {\n              return console.log(e.nativeEvent.error);\n            },\n            style: styles.sprite,\n            source: {\n              uri: \"\" + props.mon.sprites.other[\"official-artwork\"].front_default\n            }\n          })]\n        }), _jsxs(View, {\n          style: styles.cardData,\n          children: [_jsx(Text, {\n            style: styles.cardId,\n            children: formatId(props.mon.id)\n          }), _jsx(Text, {\n            style: styles.cardName,\n            children: props.mon.name\n          }), _jsxs(View, {\n            style: styles.cardTypes,\n            children: [_jsx(TypeBadge, {\n              type: props.mon.types[0].type.name\n            }), props.mon.types.length === 2 && _jsx(TypeBadge, {\n              type: props.mon.types[1].type.name\n            })]\n          })]\n        })]\n      }), _jsxs(View, {\n        style: styles.tabs,\n        children: [_jsx(Tab, {\n          tab: tab,\n          setTab: setTab,\n          name: \"About\"\n        }), _jsx(Tab, {\n          tab: tab,\n          setTab: setTab,\n          name: \"Stats\"\n        }), _jsx(Tab, {\n          tab: tab,\n          setTab: setTab,\n          name: \"Evolution\"\n        })]\n      })]\n    }), _jsxs(View, {\n      style: styles.box,\n      children: [tab === \"About\" && _jsxs(View, {\n        style: styles.boxContent,\n        children: [_jsx(Text, {\n          style: styles.boxPokedexEntry,\n          children: pokedexEntry\n        }), _jsx(Text, {\n          style: [styles.boxTitle, {\n            color: globalStyles[\"type\" + props.mon.types[0].type.name]\n          }],\n          children: \"Pok\\xE9dex Data\"\n        }), _jsx(DataLine, {\n          tag: \"Species\",\n          data: species\n        }), _jsx(DataLine, {\n          tag: \"Height\",\n          data: height\n        }), _jsx(DataLine, {\n          tag: \"Weight\",\n          data: weight\n        }), _jsx(DataLine, {\n          tag: \"Abilities\",\n          data: ''\n        }), _jsx(DataLine, {\n          tag: \"Weaknesses\",\n          data: ''\n        }), _jsx(Text, {\n          style: [styles.boxTitle, {\n            color: globalStyles[\"type\" + props.mon.types[0].type.name]\n          }],\n          children: \"Training\"\n        }), _jsx(DataLine, {\n          tag: \"EV Yield\",\n          data: ''\n        }), _jsx(DataLine, {\n          tag: \"Catch Rate\",\n          data: catchRate\n        }), _jsx(DataLine, {\n          tag: \"Base Friendship\",\n          data: pokemonSpeciesData.base_happiness\n        }), _jsx(DataLine, {\n          tag: \"Base Exp\",\n          data: props.mon.base_experience\n        }), _jsx(DataLine, {\n          tag: \"Growth Rate\",\n          data: growthRate\n        }), _jsx(Text, {\n          style: [styles.boxTitle, {\n            color: globalStyles[\"type\" + props.mon.types[0].type.name]\n          }],\n          children: \"Breeding\"\n        }), _jsx(DataLine, {\n          tag: \"Egg Groups\",\n          data: eggGroups.join(\", \")\n        }), _jsx(DataLine, {\n          tag: \"Egg Cycles\",\n          data: eggCycles\n        }), _jsx(Text, {\n          style: [styles.boxTitle, {\n            color: globalStyles[\"type\" + props.mon.types[0].type.name]\n          }],\n          children: \"Location\"\n        }), _jsx(View, {\n          style: {\n            height: 10\n          }\n        })]\n      }), tab === \"Stats\" && _jsxs(View, {\n        style: styles.boxContent,\n        children: [_jsx(Text, {\n          style: [styles.boxTitle, {\n            color: globalStyles[\"type\" + props.mon.types[0].type.name]\n          }],\n          children: \"Base Stats\"\n        }), _jsx(View, {\n          style: styles.statGrid,\n          children: _jsx(StatsTable, {\n            stats: props.mon.stats,\n            type: props.mon.types[0].type.name\n          })\n        }), _jsx(Text, {\n          style: styles.statsExplained,\n          children: \"The ranges shown on the right are for a level 100 Pok\\xE9mon. Maximum values are based on a beneficial nature, 252 EVs, 31 IVs; minimum values are based on a hindering nature, 0 EVs, 0 IVs\"\n        }), _jsx(Text, {\n          style: [styles.boxTitle, {\n            color: globalStyles[\"type\" + props.mon.types[0].type.name]\n          }],\n          children: \"Type Defences\"\n        }), _jsx(View, {\n          style: {\n            height: 10\n          }\n        })]\n      }), tab === \"Evolution\" && _jsxs(View, {\n        style: styles.boxContent,\n        children: [_jsx(Text, {\n          style: [styles.boxTitle, {\n            color: globalStyles[\"type\" + props.mon.types[0].type.name]\n          }],\n          children: \"Evolution Chart\"\n        }), _jsx(Evolution, {\n          evolutionChainId: evolutionChainId\n        }), _jsx(View, {\n          style: {\n            height: 10\n          }\n        })]\n      })]\n    })]\n  });\n};\n\nexport default Profile;\nvar styles = StyleSheet.create({\n  root: {\n    boxSizing: 'border-box'\n  },\n  container: {\n    padding: 0,\n    margin: 0,\n    width: '100%',\n    backgroundColor: globalStyles.backgroundtypenormal,\n    paddingTop: StatusBar.currentHeight\n  },\n  backArrowTouchable: {\n    position: 'absolute',\n    top: 42.5,\n    left: 42.5,\n    height: 20,\n    width: 20,\n    zIndex: 1\n  },\n  backArrow: {\n    height: 20,\n    width: 20\n  },\n  pokemonTitleContainer: {\n    position: 'absolute',\n    top: 15,\n    left: 0,\n    height: 120,\n    width: Dimensions.get('window').width\n  },\n  pokemonTitle: {\n    position: 'relative',\n    textTransform: 'capitalize',\n    fontWeight: '700',\n    fontSize: 100,\n    alignSelf: 'center',\n    color: 'rgba(255, 255, 255, 1.0)',\n    fontFamily: 'Outline'\n  },\n  Profile: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginHorizontal: 40,\n    marginTop: 55\n  },\n  top: {\n    display: 'flex',\n    flexDirection: 'row',\n    height: 155,\n    padding: 0,\n    justifyContent: 'center'\n  },\n  topImage: {\n    width: 125,\n    height: 125,\n    marginRight: 25\n  },\n  circle: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: 125,\n    width: 125\n  },\n  sprite: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: 125,\n    width: 125\n  },\n  cardData: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    height: 125,\n    margin: 0\n  },\n  cardTypes: {\n    display: 'flex',\n    flexDirection: 'row'\n  },\n  cardId: {\n    fontWeight: '700',\n    fontSize: 12,\n    color: globalStyles.textnumber\n  },\n  cardName: {\n    textTransform: 'capitalize',\n    fontWeight: '700',\n    fontSize: 26,\n    color: globalStyles.textwhite\n  },\n  tabs: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 0,\n    alignItems: 'center'\n  },\n  box: {\n    flexGrow: 1,\n    backgroundColor: globalStyles.backgroundwhite,\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30\n  },\n  boxContent: {\n    marginHorizontal: 40,\n    marginTop: 40,\n    flexGrow: 0\n  },\n  boxTitle: {\n    fontSize: 16,\n    fontWeight: '700',\n    color: globalStyles.typenormal,\n    marginBottom: 22.5\n  },\n  boxPokedexEntry: {\n    fontSize: 16,\n    fontWeight: '400',\n    color: globalStyles.textgrey,\n    marginBottom: 30\n  },\n  boxAbout: {\n    display: 'flex',\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 15\n  },\n  boxAboutTagContainer: {\n    width: 85\n  },\n  boxAboutTag: {\n    fontSize: 12,\n    fontWeight: '500',\n    color: globalStyles.textblack\n  },\n  boxAboutData: {\n    fontSize: 16,\n    fontWeight: '400',\n    color: globalStyles.textgrey,\n    textTransform: 'capitalize'\n  },\n  statsExplained: {\n    fontWeight: '500',\n    fontSize: 12,\n    marginBottom: 20,\n    color: globalStyles.textgrey\n  },\n  statGrid: {\n    display: 'flex',\n    flexDirection: 'row',\n    flex: 1,\n    alignSelf: 'stretch'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","TypeBadge","globalStyles","GradientNameText","DotsSixByThree","Circle","Back","MainClient","EvolutionClient","StatsTable","DataLine","Tab","Evolution","Profile","props","tab","setTab","pokemonSpeciesData","setPokemonSpeciesData","species","setSpecies","weight","setWeight","height","setHeight","growthRate","setGrowthRate","catchRate","setCatchRate","eggCycles","setEggCycles","pokedexEntry","setPokedexEntry","eggGroups","setEggGroups","evolutionChainId","setEvolutionChainId","evolutionChainData","setEvolutionChainData","cmToFtInches","num","realFeet","feet","Math","floor","inches","round","toFixed","toString","padStart","getPokemonSpeciesData","mon","api","pokemon","getPokemonSpeciesById","id","then","data","growth_rate","name","replace","capture_rate","hatch_counter","toLocaleString","i","genera","length","flavor_text_entries","language","flavor_text","genus","egg_groups","map","x","urlPath","evolution_chain","url","substring","indexOf","slice","getEvolutionChainData","console","log","getEvolutionChainById","formatId","styles","container","backgroundColor","types","type","backArrowTouchable","setPokemonProfile","backArrow","pokemonTitleContainerContainer","pokemonTitleContainer","pokemonTitle","top","topImage","circle","e","nativeEvent","error","sprite","uri","sprites","other","front_default","cardData","cardId","cardName","cardTypes","tabs","box","boxContent","boxPokedexEntry","boxTitle","color","base_happiness","base_experience","join","statGrid","stats","statsExplained","StyleSheet","create","root","boxSizing","padding","margin","width","backgroundtypenormal","paddingTop","StatusBar","currentHeight","position","left","zIndex","Dimensions","get","textTransform","fontWeight","fontSize","alignSelf","fontFamily","display","flexDirection","marginHorizontal","marginTop","justifyContent","marginRight","textnumber","textwhite","alignItems","flexGrow","backgroundwhite","borderTopLeftRadius","borderTopRightRadius","typenormal","marginBottom","textgrey","boxAbout","boxAboutTagContainer","boxAboutTag","textblack","boxAboutData","flex"],"sources":["C:/Users/Kieran/Documents/WebDevStuff/PokeDB-RN/pokedex/components/Profile/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TouchableOpacity, ScrollView, Dimensions, StatusBar, Image, View, Text, StyleSheet } from 'react-native';\r\nimport TypeBadge from '../Home/TypeBadge';\r\nimport globalStyles from '../../styles/globalStyles.js';\r\nimport GradientNameText from '../GradientNameText';\r\nimport DotsSixByThree from '../../images/vectors/patterns/6x3.png';\r\nimport Circle from '../../images/vectors/patterns/Circle.png';\r\nimport Back from '../../images/vectors/icons/Back.png';\r\nimport { MainClient, EvolutionClient } from 'pokenode-ts';\r\nimport StatsTable from './StatsTable';\r\nimport DataLine from './DataLine';\r\nimport Tab from './Tab';\r\nimport Evolution from './Evolution';\r\n\r\nconst Profile = (props) => {\r\n  const [tab, setTab] = useState(\"About\");\r\n  const [pokemonSpeciesData, setPokemonSpeciesData] = useState([]);\r\n  const [species, setSpecies] = useState('Unknown');\r\n  const [weight, setWeight] = useState('Unknown');\r\n  const [height, setHeight] = useState('Unknown');\r\n  const [growthRate, setGrowthRate] = useState('Unknown');\r\n  const [catchRate, setCatchRate] = useState('Unknown');\r\n  const [eggCycles, setEggCycles] = useState('Unknown');\r\n  const [pokedexEntry, setPokedexEntry] = useState('Unknown');\r\n  const [eggGroups, setEggGroups] = useState([]);\r\n  const [evolutionChainId, setEvolutionChainId] = useState();\r\n  const [evolutionChainData, setEvolutionChainData] = useState();\r\n\r\n  function cmToFtInches(num) {\r\n    const realFeet = ((num * 0.393700) / 12);\r\n    const feet = Math.floor(realFeet);\r\n    let inches = (Math.round(10 * ((realFeet - feet) * 12)) / 10).toFixed(0);\r\n    inches = inches.toString().padStart(2, '0');\r\n    return feet + \"\\'\" + inches + \"\\\"\"\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getPokemonSpeciesData = async () => {\r\n      setWeight(props.mon.weight / 10 + 'kg (' + (props.mon.weight / 10 * 2.20462).toFixed(1) + ' lbs)')\r\n      setHeight(props.mon.height / 10 + 'm (' + cmToFtInches(props.mon.height * 10) + ')')\r\n      const api = new MainClient();\r\n      await api.pokemon\r\n        .getPokemonSpeciesById(props.mon.id)\r\n        .then((data) => {\r\n          setPokemonSpeciesData(data);\r\n          setGrowthRate(data.growth_rate.name.replace(/\\-/g, \" \"));\r\n          setCatchRate(data.capture_rate);\r\n          setEggCycles(data.hatch_counter + ' (' + (data.hatch_counter * 255).toLocaleString('en-US') + '-' + (data.hatch_counter * 257).toLocaleString('en-US') + ' steps)');\r\n          for (let i = 0; i < data.genera.length; i++) {\r\n            if (data.flavor_text_entries[i].language.name === 'en') {\r\n              setPokedexEntry(data.flavor_text_entries[i].flavor_text.replace(/[\\n\\f]/g, ' '));\r\n            }\r\n          }\r\n\r\n          for (let i = 0; i < data.genera.length; i++) {\r\n            if (data.genera[i].language.name === 'en') {\r\n              setSpecies(data.genera[i].genus);\r\n            }\r\n          }\r\n          setEggGroups(data.egg_groups.map(x => (x.name)))\r\n\r\n          // Get Evolution Data\r\n          const urlPath = data.evolution_chain.url;\r\n          setEvolutionChainId(urlPath.substring(urlPath.indexOf('chain/') + 6).slice(0, -1));\r\n        })\r\n    }\r\n    getPokemonSpeciesData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getEvolutionChainData = async () => {\r\n    if (evolutionChainId != null) {\r\n      console.log(evolutionChainId);\r\n        const api = new EvolutionClient();\r\n        await api\r\n          .getEvolutionChainById(1)\r\n          .then((data) => {\r\n            setEvolutionChainData(data);\r\n          })\r\n      }\r\n    }\r\n    getEvolutionChainData();\r\n  }, [evolutionChainId]);\r\n  console.log(\"Profile evolutionChainId: \" + evolutionChainId);\r\n  // console.log(props);\r\n  // console.log(pokemonSpeciesData);\r\n  // console.log(growthRate);\r\n  // console.log(pokedexEntry);\r\n  // console.log(props.mon);\r\n  function formatId(id) {\r\n    var num = '' + id;\r\n    while (num.length < 3) {\r\n      num = '0' + num;\r\n    }\r\n    num = '#' + num;\r\n    return num;\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <ScrollView style={[styles.container, { backgroundColor: globalStyles[\"backgroundtype\" + props.mon.types[0].type.name] }]}>\r\n      <TouchableOpacity style={styles.backArrowTouchable} activeOpacity={.8} onPress={() => (props.setPokemonProfile(''))}>\r\n        <Image style={styles.backArrow} source={Back} />\r\n      </TouchableOpacity>\r\n      <View style={styles.pokemonTitleContainerContainer}>\r\n        <View style={styles.pokemonTitleContainer}>\r\n          <GradientNameText style={styles.pokemonTitle} color={globalStyles[\"backgroundtype\" + props.mon.types[0].type.name]} name={props.mon.name} />\r\n        </View>\r\n      </View>\r\n      <View style={styles.Profile}>\r\n        <View style={styles.top}>\r\n          <View style={styles.topImage}>\r\n            <Image style={styles.circle} source={Circle} />\r\n            <Image onError={(e) => console.log(e.nativeEvent.error)} style={styles.sprite} source={{ uri: `${props.mon.sprites.other[\"official-artwork\"].front_default}` }} />\r\n          </View>\r\n          <View style={styles.cardData}>\r\n            <Text style={styles.cardId}>{formatId(props.mon.id)}</Text>\r\n            <Text style={styles.cardName}>{props.mon.name}</Text>\r\n            <View style={styles.cardTypes}>\r\n              <TypeBadge type={props.mon.types[0].type.name} />\r\n              {props.mon.types.length === 2 &&\r\n                <TypeBadge type={props.mon.types[1].type.name} />\r\n              }\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <View style={styles.tabs}>\r\n          <Tab tab={tab} setTab={setTab} name=\"About\" />\r\n          <Tab tab={tab} setTab={setTab} name=\"Stats\" />\r\n          <Tab tab={tab} setTab={setTab} name=\"Evolution\" />\r\n        </View>\r\n\r\n      </View>\r\n      <View style={styles.box}>\r\n        {tab === \"About\" &&\r\n          <View style={styles.boxContent}>\r\n            {/* TODO: Fix Pokedex Entry language to be English on all. Eg. 746 Wishiwashi is Japanese*/}\r\n            <Text style={styles.boxPokedexEntry}>{pokedexEntry}</Text>\r\n\r\n            <Text style={[styles.boxTitle, { color: globalStyles[\"type\" + props.mon.types[0].type.name] }]}>Pokédex Data</Text>\r\n            <DataLine tag={\"Species\"} data={species} />\r\n            <DataLine tag={\"Height\"} data={height} />\r\n            <DataLine tag={\"Weight\"} data={weight} />\r\n            <DataLine tag={\"Abilities\"} data={''} />\r\n            <DataLine tag={\"Weaknesses\"} data={''} />\r\n\r\n            <Text style={[styles.boxTitle, { color: globalStyles[\"type\" + props.mon.types[0].type.name] }]}>Training</Text>\r\n            <DataLine tag={\"EV Yield\"} data={''} />\r\n            <DataLine tag={\"Catch Rate\"} data={catchRate} />\r\n            <DataLine tag={\"Base Friendship\"} data={pokemonSpeciesData.base_happiness} />\r\n            <DataLine tag={\"Base Exp\"} data={props.mon.base_experience} />\r\n            <DataLine tag={\"Growth Rate\"} data={growthRate} />\r\n\r\n            <Text style={[styles.boxTitle, { color: globalStyles[\"type\" + props.mon.types[0].type.name] }]}>Breeding</Text>\r\n            <DataLine tag={\"Egg Groups\"} data={eggGroups.join(\", \")} />\r\n            <DataLine tag={\"Egg Cycles\"} data={eggCycles} />\r\n\r\n            <Text style={[styles.boxTitle, { color: globalStyles[\"type\" + props.mon.types[0].type.name] }]}>Location</Text>\r\n            <View style={{ height: 10 }}></View>\r\n          </View>\r\n        }\r\n        {tab === \"Stats\" &&\r\n          <View style={styles.boxContent}>\r\n            <Text style={[styles.boxTitle, { color: globalStyles[\"type\" + props.mon.types[0].type.name] }]}>Base Stats</Text>\r\n            <View style={styles.statGrid}>\r\n              <StatsTable stats={props.mon.stats} type={props.mon.types[0].type.name} />\r\n            </View>\r\n            <Text style={styles.statsExplained}>The ranges shown on the right are for a level 100 Pokémon. Maximum values are based on a beneficial nature, 252 EVs, 31 IVs; minimum values are based on a hindering nature, 0 EVs, 0 IVs</Text>\r\n            <Text style={[styles.boxTitle, { color: globalStyles[\"type\" + props.mon.types[0].type.name] }]}>Type Defences</Text>\r\n            <View style={{ height: 10 }}></View>\r\n          </View>\r\n        }\r\n        {tab === \"Evolution\" &&\r\n          <View style={styles.boxContent}>\r\n            <Text style={[styles.boxTitle, { color: globalStyles[\"type\" + props.mon.types[0].type.name] }]}>Evolution Chart</Text>\r\n            <Evolution evolutionChainId={evolutionChainId} />\r\n            <View style={{ height: 10 }}></View>\r\n          </View>\r\n        }\r\n\r\n      </View>\r\n\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  root: {\r\n    boxSizing: 'border-box',\r\n  },\r\n\r\n  container: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: '100%',\r\n    backgroundColor: globalStyles.backgroundtypenormal,\r\n    paddingTop: StatusBar.currentHeight,\r\n  },\r\n\r\n  backArrowTouchable: {\r\n    position: 'absolute',\r\n    top: 42.5,\r\n    left: 42.5,\r\n    height: 20,\r\n    width: 20,\r\n    zIndex: 1\r\n  },\r\n\r\n  backArrow: {\r\n    height: 20,\r\n    width: 20\r\n  },\r\n\r\n  pokemonTitleContainer: {\r\n    position: 'absolute',\r\n    top: 15,\r\n    left: 0,\r\n    height: 120,\r\n    width: Dimensions.get('window').width,\r\n  },\r\n\r\n  pokemonTitle: {\r\n    position: 'relative',\r\n    textTransform: 'capitalize',\r\n    fontWeight: '700',\r\n    fontSize: 100,\r\n    alignSelf: 'center',\r\n    color: 'rgba(255, 255, 255, 1.0)',\r\n    fontFamily: 'Outline'\r\n  },\r\n\r\n  Profile: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    marginHorizontal: 40,\r\n    marginTop: 55\r\n  },\r\n\r\n  top: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    height: 155,\r\n    padding: 0,\r\n    justifyContent: 'center'\r\n  },\r\n\r\n  topImage: {\r\n    width: 125,\r\n    height: 125,\r\n    marginRight: 25\r\n  },\r\n\r\n  circle: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    height: 125,\r\n    width: 125,\r\n  },\r\n\r\n  //   dotsSixByThree: {\r\n  //     position: 'absolute',\r\n  //     top: 5,\r\n  //     left: 90,\r\n  //     height: 32,\r\n  //     width: 74\r\n  //   },\r\n\r\n  sprite: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    height: 125,\r\n    width: 125\r\n  },\r\n\r\n  cardData: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    height: 125,\r\n    margin: 0\r\n  },\r\n\r\n  cardTypes: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n\r\n  cardId: {\r\n    fontWeight: '700',\r\n    fontSize: 12,\r\n    color: globalStyles.textnumber\r\n  },\r\n\r\n  cardName: {\r\n    textTransform: 'capitalize',\r\n    fontWeight: '700',\r\n    fontSize: 26,\r\n    color: globalStyles.textwhite\r\n  },\r\n\r\n  tabs: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    margin: 0,\r\n    alignItems: 'center',\r\n  },\r\n\r\n  box: {\r\n    flexGrow: 1,\r\n    backgroundColor: globalStyles.backgroundwhite,\r\n    borderTopLeftRadius: 30,\r\n    borderTopRightRadius: 30\r\n  },\r\n\r\n  boxContent: {\r\n    marginHorizontal: 40,\r\n    marginTop: 40,\r\n    flexGrow: 0\r\n  },\r\n\r\n  boxTitle: {\r\n    fontSize: 16,\r\n    fontWeight: '700',\r\n    color: globalStyles.typenormal,\r\n    marginBottom: 22.5\r\n  },\r\n\r\n  boxPokedexEntry: {\r\n    fontSize: 16,\r\n    fontWeight: '400',\r\n    color: globalStyles.textgrey,\r\n    marginBottom: 30,\r\n  },\r\n\r\n  boxAbout: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: 15,\r\n  },\r\n\r\n  boxAboutTagContainer: {\r\n    width: 85\r\n  },\r\n  boxAboutTag: {\r\n    fontSize: 12,\r\n    fontWeight: '500',\r\n    color: globalStyles.textblack,\r\n  },\r\n\r\n  boxAboutData: {\r\n    fontSize: 16,\r\n    fontWeight: '400',\r\n    color: globalStyles.textgrey,\r\n    textTransform: 'capitalize',\r\n  },\r\n\r\n  statsExplained: {\r\n    fontWeight: '500',\r\n    fontSize: 12,\r\n    marginBottom: 20,\r\n    color: globalStyles.textgrey\r\n  },\r\n\r\n  statGrid: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flex: 1,\r\n    alignSelf: 'stretch',\r\n  },\r\n\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module"}